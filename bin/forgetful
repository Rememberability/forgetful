#!/usr/bin/env ruby

############################################################

require "forgetful"

############################################################

def ask(prompt, validate_re=//)
  while true
    print prompt
    answer = readline.chomp

    return answer.to_i if answer =~ validate_re
  end
end

#-------------------------------------------------

def ask_grade(prompt)
  ask(prompt, /\A[0-5]\Z/)
end

#-------------------------------------------------

def ask_about(reminder, i, n)
  width = "#{n}/#{n}. ".size
  padding = " " * width
  ask "#{i}/#{n}. ".rjust(width) + "Q: #{reminder.question}"
  puts                   padding + "A: #{reminder.answer}"
  q = ask_grade          padding + "? "
  puts
  return q
end

#-------------------------------------------------

def quiz(reminders)
  i = 0
  reminders.collect do |reminder|
    i += 1
    reminder.next(ask_about(reminder, i, reminders.size))
  end
end

############################################################

def process_file(filename)
  #--------------------- quiz ----------------------
  reminders = Reminder.read_csv(filename)

  dues, not_dues = reminders.partition {|reminder| reminder.due_on <= Date.today}

  puts "### QUIZ: #{filename}"
  gradeds = quiz(dues.sort_by { rand })

  Reminder.write_csv(filename, (gradeds + not_dues).sort)

  #-------------------- review ---------------------
  faileds = gradeds.select {|reminder| reminder.review? }
  until faileds.empty?
    puts "# REVIEW: #{filename}"
    gradeds = quiz(faileds.sort_by { rand }) # review
    faileds = gradeds.select {|reminder| reminder.review? }
  end
end

############################################################

filenames = ARGV.dup
ARGV.clear

filenames.each do |filename|
  process_file filename
end

